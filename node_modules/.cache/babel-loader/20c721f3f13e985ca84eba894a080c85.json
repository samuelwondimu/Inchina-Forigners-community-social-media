{"ast":null,"code":"var _jsxFileName = \"/home/samuel/ningbo/final-project/src/components/search/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfiles } from '../../actions/profile';\nimport { getPosts } from '../../actions/post';\nimport PostItem from '../posts/PostItem';\nimport ProfileItem from '../profiles/ProfileItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = ({\n  getProfiles,\n  profile: {\n    profiles,\n    loading\n  },\n  getPosts,\n  post: {\n    posts\n  }\n}) => {\n  _s();\n\n  const [searchTerm, setSearchTerm] = useState('');\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"search-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"search by typing........\",\n          onChange: event => {\n            setSearchTerm(event.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Profiles\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), profiles.length > 0 ? profiles.filter(profile => {\n        if (searchTerm == '') return profile;else if (profile.user.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n          return profile;\n        }\n      }).map(profile => {\n        return /*#__PURE__*/_jsxDEV(ProfileItem, {\n          profile: profile\n        }, profile._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 24\n        }, this);\n      }) : /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"No profiles found...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), posts.filter(post => {\n        if (searchTerm == '') return post;else if (post.text.toLowerCase().includes(searchTerm.toLowerCase()) || post.name.toLowerCase().includes(searchTerm.toLowerCase())) {\n          return post;\n        }\n      }).map(post => {\n        return /*#__PURE__*/_jsxDEV(PostItem, {\n          post: post\n        }, post._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 22\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"zhdowNODA64uhuNeWDzLXBlaIjA=\");\n\n_c = Search;\nSearch.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.func.isRequired,\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  profile: state.profile,\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getProfiles,\n  getPosts\n})(Search);\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/home/samuel/ningbo/final-project/src/components/search/Search.js"],"names":["React","Fragment","useEffect","useState","PropTypes","connect","Spinner","getProfiles","getPosts","PostItem","ProfileItem","Search","profile","profiles","loading","post","posts","searchTerm","setSearchTerm","event","target","value","length","filter","user","name","toLowerCase","includes","map","_id","text","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport { getProfiles } from '../../actions/profile';\nimport { getPosts } from '../../actions/post';\nimport PostItem from '../posts/PostItem';\nimport ProfileItem from '../profiles/ProfileItem';\nconst Search = ({\n  getProfiles,\n  profile: { profiles, loading },\n  getPosts,\n  post: { posts }\n}) => {\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  useEffect(() => {\n    getProfiles();\n  }, [getProfiles]);\n\n  return (\n    <Fragment>\n      <div class=\"search-bar\">\n        <form>\n          <input\n            type=\"text\"\n            placeholder=\"search by typing........\"\n            onChange={(event) => {\n              setSearchTerm(event.target.value);\n            }}\n          />\n        </form>\n      </div>\n\n      {loading ? (\n        <Spinner />\n      ) : (\n        <Fragment>\n          <hr></hr>\n          <h1>Profiles</h1>\n          {profiles.length > 0 ? (\n            profiles\n              .filter((profile) => {\n                if (searchTerm == '') return profile;\n                else if (\n                  profile.user.name\n                    .toLowerCase()\n                    .includes(searchTerm.toLowerCase())\n                ) {\n                  return profile;\n                }\n              })\n              .map((profile) => {\n                return <ProfileItem key={profile._id} profile={profile} />;\n              })\n          ) : (\n            <h4>No profiles found...</h4>\n          )}\n          <hr></hr>\n          <h1>posts</h1>\n          {posts\n            .filter((post) => {\n              if (searchTerm == '') return post;\n              else if (\n                post.text.toLowerCase().includes(searchTerm.toLowerCase()) ||\n                post.name.toLowerCase().includes(searchTerm.toLowerCase())\n              ) {\n                return post;\n              }\n            })\n            .map((post) => {\n              return <PostItem key={post._id} post={post} />;\n            })}\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\n\nSearch.propTypes = {\n  getProfiles: PropTypes.func.isRequired,\n  profile: PropTypes.func.isRequired,\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  profile: state.profile,\n  post: state.post\n});\n\nexport default connect(mapStateToProps, { getProfiles, getPosts })(Search);\n"]},"metadata":{},"sourceType":"module"}