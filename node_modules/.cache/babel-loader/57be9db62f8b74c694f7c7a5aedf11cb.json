{"ast":null,"code":"var _jsxFileName = \"/home/samuel/ningbo/final-project/src/components/dashboard/UserPosts.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getUserPosts } from '../../actions/post';\nimport formatDate from '../../utils/formatDate';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\nimport PostItem from '../posts/PostItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Route = () => {\n  _s();\n\n  const location = useLocation();\n  return location.pathname;\n};\n\n_s(Route, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = Route;\n\nconst UserPosts = ({\n  addLike,\n  removeLike,\n  deletePost,\n  getUserPosts,\n  auth: {\n    user\n  },\n  profile: {\n    profile\n  },\n  post: {\n    userposts\n  },\n  showActions\n}) => {\n  _s2();\n\n  useEffect(() => {\n    getUserPosts(user._id);\n  }, [getUserPosts]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: userposts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n      post: post\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(UserPosts, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c2 = UserPosts;\nUserPosts.defaultProps = {\n  showActions: true\n};\nUserPosts.propTypes = {\n  auth: PropTypes.object.isRequired,\n  getUserPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  showActions: PropTypes.bool\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  post: state.post,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost,\n  getUserPosts\n})(UserPosts);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Route\");\n$RefreshReg$(_c2, \"UserPosts\");","map":{"version":3,"sources":["/home/samuel/ningbo/final-project/src/components/dashboard/UserPosts.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Link","useLocation","getUserPosts","formatDate","addLike","removeLike","deletePost","PostItem","Route","location","pathname","UserPosts","auth","user","profile","post","userposts","showActions","_id","map","defaultProps","propTypes","object","isRequired","func","bool","mapStateToProps","state"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,SAASC,OAAT,EAAkBC,UAAlB,EAA8BC,UAA9B,QAAgD,oBAAhD;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,SAAOQ,QAAQ,CAACC,QAAhB;AACD,CAHD;;GAAMF,K;UACaP,W;;;KADbO,K;;AAKN,MAAMG,SAAS,GAAG,CAAC;AACjBP,EAAAA,OADiB;AAEjBC,EAAAA,UAFiB;AAGjBC,EAAAA,UAHiB;AAIjBJ,EAAAA,YAJiB;AAKjBU,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GALW;AAMjBC,EAAAA,OAAO,EAAE;AAAEA,IAAAA;AAAF,GANQ;AAOjBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF,GAPW;AAQjBC,EAAAA;AARiB,CAAD,KASZ;AAAA;;AACJpB,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,YAAY,CAACW,IAAI,CAACK,GAAN,CAAZ;AACD,GAFQ,EAEN,CAAChB,YAAD,CAFM,CAAT;AAGA,sBACE,QAAC,QAAD;AAAA,cACGc,SAAS,CAACG,GAAV,CAAeJ,IAAD,iBACb,QAAC,QAAD;AAAyB,MAAA,IAAI,EAAEA;AAA/B,OAAeA,IAAI,CAACG,GAApB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CApBD;;IAAMP,S;;MAAAA,S;AAsBNA,SAAS,CAACS,YAAV,GAAyB;AACvBH,EAAAA,WAAW,EAAE;AADU,CAAzB;AAIAN,SAAS,CAACU,SAAV,GAAsB;AACpBT,EAAAA,IAAI,EAAEd,SAAS,CAACwB,MAAV,CAAiBC,UADH;AAEpBrB,EAAAA,YAAY,EAAEJ,SAAS,CAAC0B,IAAV,CAAeD,UAFT;AAGpBR,EAAAA,IAAI,EAAEjB,SAAS,CAACwB,MAAV,CAAiBC,UAHH;AAIpBT,EAAAA,OAAO,EAAEhB,SAAS,CAACwB,MAAV,CAAiBC,UAJN;AAKpBnB,EAAAA,OAAO,EAAEN,SAAS,CAAC0B,IAAV,CAAeD,UALJ;AAMpBlB,EAAAA,UAAU,EAAEP,SAAS,CAAC0B,IAAV,CAAeD,UANP;AAOpBjB,EAAAA,UAAU,EAAER,SAAS,CAAC0B,IAAV,CAAeD,UAPP;AAQpBN,EAAAA,WAAW,EAAEnB,SAAS,CAAC2B;AARH,CAAtB;;AAWA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCf,EAAAA,IAAI,EAAEe,KAAK,CAACf,IADsB;AAElCG,EAAAA,IAAI,EAAEY,KAAK,CAACZ,IAFsB;AAGlCD,EAAAA,OAAO,EAAEa,KAAK,CAACb;AAHmB,CAAZ,CAAxB;;AAMA,eAAef,OAAO,CAAC2B,eAAD,EAAkB;AACtCtB,EAAAA,OADsC;AAEtCC,EAAAA,UAFsC;AAGtCC,EAAAA,UAHsC;AAItCJ,EAAAA;AAJsC,CAAlB,CAAP,CAKZS,SALY,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getUserPosts } from '../../actions/post';\nimport formatDate from '../../utils/formatDate';\nimport { addLike, removeLike, deletePost } from '../../actions/post';\nimport PostItem from '../posts/PostItem';\n\nconst Route = () => {\n  const location = useLocation();\n  return location.pathname;\n};\n\nconst UserPosts = ({\n  addLike,\n  removeLike,\n  deletePost,\n  getUserPosts,\n  auth: { user },\n  profile: { profile },\n  post: { userposts },\n  showActions\n}) => {\n  useEffect(() => {\n    getUserPosts(user._id);\n  }, [getUserPosts]);\n  return (\n    <Fragment>\n      {userposts.map((post) => (\n        <PostItem key={post._id} post={post} />\n      ))}\n    </Fragment>\n  );\n};\n\nUserPosts.defaultProps = {\n  showActions: true\n};\n\nUserPosts.propTypes = {\n  auth: PropTypes.object.isRequired,\n  getUserPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired,\n  addLike: PropTypes.func.isRequired,\n  removeLike: PropTypes.func.isRequired,\n  deletePost: PropTypes.func.isRequired,\n  showActions: PropTypes.bool\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  post: state.post,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  addLike,\n  removeLike,\n  deletePost,\n  getUserPosts\n})(UserPosts);\n"]},"metadata":{},"sourceType":"module"}