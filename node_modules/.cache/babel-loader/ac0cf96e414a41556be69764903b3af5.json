{"ast":null,"code":"var _jsxFileName = \"/home/samuel/ningbo/final-project/src/components/posts/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect, lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profile';\nimport { getPosts } from '../../actions/post';\nimport '../../styles/components/Home.css';\nimport Spinner from '../layout/Spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostItem = /*#__PURE__*/lazy(_c = () => import('./PostItem'));\n_c2 = PostItem;\nconst PostForm = /*#__PURE__*/lazy(_c3 = () => import('./PostForm'));\n_c4 = PostForm;\nconst Contributors = /*#__PURE__*/lazy(_c5 = () => import('./Contributors'));\n_c6 = Contributors;\nconst TopPosts = /*#__PURE__*/lazy(_c7 = () => import('./TopPosts'));\n_c8 = TopPosts;\n\nconst Posts = ({\n  getPosts,\n  post: {\n    posts\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home--layout\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"sidebar--left--home\",\n          children: /*#__PURE__*/_jsxDEV(Contributors, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"center-content\",\n          children: [/*#__PURE__*/_jsxDEV(PostForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), posts.map(post => /*#__PURE__*/_jsxDEV(PostItem, {\n            post: post\n          }, post._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"sidebar--right--home\",\n          children: /*#__PURE__*/_jsxDEV(TopPosts, {\n            posts: posts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c9 = Posts;\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, {\n  getPosts\n})(Posts);\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"PostItem$lazy\");\n$RefreshReg$(_c2, \"PostItem\");\n$RefreshReg$(_c3, \"PostForm$lazy\");\n$RefreshReg$(_c4, \"PostForm\");\n$RefreshReg$(_c5, \"Contributors$lazy\");\n$RefreshReg$(_c6, \"Contributors\");\n$RefreshReg$(_c7, \"TopPosts$lazy\");\n$RefreshReg$(_c8, \"TopPosts\");\n$RefreshReg$(_c9, \"Posts\");","map":{"version":3,"sources":["/home/samuel/ningbo/final-project/src/components/posts/Posts.js"],"names":["React","Fragment","useEffect","lazy","Suspense","PropTypes","connect","getCurrentProfile","getPosts","Spinner","PostItem","PostForm","Contributors","TopPosts","Posts","post","posts","map","_id","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,IAArC,EAA2CC,QAA3C,QAA2D,OAA3D;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,uBAAlC;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAO,kCAAP;AACA,OAAOC,OAAP,MAAoB,mBAApB;;AAEA,MAAMC,QAAQ,gBAAGP,IAAI,MAAC,MAAM,OAAO,YAAP,CAAP,CAArB;MAAMO,Q;AACN,MAAMC,QAAQ,gBAAGR,IAAI,OAAC,MAAM,OAAO,YAAP,CAAP,CAArB;MAAMQ,Q;AACN,MAAMC,YAAY,gBAAGT,IAAI,OAAC,MAAM,OAAO,gBAAP,CAAP,CAAzB;MAAMS,Y;AACN,MAAMC,QAAQ,gBAAGV,IAAI,OAAC,MAAM,OAAO,YAAP,CAAP,CAArB;MAAMU,Q;;AACN,MAAMC,KAAK,GAAG,CAAC;AAAEN,EAAAA,QAAF;AAAYO,EAAAA,IAAI,EAAE;AAAEC,IAAAA;AAAF;AAAlB,CAAD,KAAmC;AAAA;;AAC/Cd,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,QAAQ;AACT,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIA,sBACE,QAAC,QAAD;AAAA,2BACE,QAAC,QAAD;AACE,MAAA,QAAQ,eACN;AAAA,+BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA,6BAOE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE;AAAS,UAAA,EAAE,EAAC,qBAAZ;AAAA,iCACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAS,UAAA,EAAE,EAAC,gBAAZ;AAAA,kCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGQ,KAAK,CAACC,GAAN,CAAWF,IAAD,iBACT,QAAC,QAAD;AAAyB,YAAA,IAAI,EAAEA;AAA/B,aAAeA,IAAI,CAACG,GAApB;AAAA;AAAA;AAAA;AAAA,kBADD,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAUE;AAAS,UAAA,EAAE,EAAC,sBAAZ;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAEF;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA/BD;;GAAMF,K;;MAAAA,K;AAiCNA,KAAK,CAACK,SAAN,GAAkB;AAChBX,EAAAA,QAAQ,EAAEH,SAAS,CAACe,IAAV,CAAeC,UADT;AAEhBN,EAAAA,IAAI,EAAEV,SAAS,CAACiB,MAAV,CAAiBD;AAFP,CAAlB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClCT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADsB,CAAZ,CAAxB;;AAIA,eAAeT,OAAO,CAACiB,eAAD,EAAkB;AAAEf,EAAAA;AAAF,CAAlB,CAAP,CAAuCM,KAAvC,CAAf","sourcesContent":["import React, { Fragment, useEffect, lazy, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { getCurrentProfile } from '../../actions/profile';\nimport { getPosts } from '../../actions/post';\nimport '../../styles/components/Home.css';\nimport Spinner from '../layout/Spinner';\n\nconst PostItem = lazy(() => import('./PostItem'));\nconst PostForm = lazy(() => import('./PostForm'));\nconst Contributors = lazy(() => import('./Contributors'));\nconst TopPosts = lazy(() => import('./TopPosts'));\nconst Posts = ({ getPosts, post: { posts } }) => {\n  useEffect(() => {\n    getPosts();\n  }, [getPosts]);\n\n  return (\n    <Fragment>\n      <Suspense\n        fallback={\n          <div>\n            <Spinner />\n          </div>\n        }\n      >\n        <div className=\"home--layout\">\n          <section id=\"sidebar--left--home\">\n            <Contributors />\n          </section>\n          <section id=\"center-content\">\n            <PostForm />\n            {posts.map((post) => (\n              <PostItem key={post._id} post={post} />\n            ))}\n          </section>\n          <section id=\"sidebar--right--home\">\n            <TopPosts posts={posts} />\n          </section>\n        </div>\n      </Suspense>\n    </Fragment>\n  );\n};\n\nPosts.propTypes = {\n  getPosts: PropTypes.func.isRequired,\n  post: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = (state) => ({\n  post: state.post\n});\n\nexport default connect(mapStateToProps, { getPosts })(Posts);\n"]},"metadata":{},"sourceType":"module"}